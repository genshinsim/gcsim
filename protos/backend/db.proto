syntax = "proto3";
package db;
option go_package="github.com/genshinsim/gcsim/backend/pkg/services/db";

import "protos/model/result.proto";
import "protos/model/sim.proto";
import "protos/model/enums.proto";
import "google/protobuf/struct.proto";

service DBStore {
    //generic get for pulling from approved db
    rpc Get (GetRequest) returns (GetResponse) {}
    rpc GetAll (GetAllRequest) returns (GetAllResponse) {}
    rpc GetOne (GetOneRequest) returns (GetOneResponse) {}
    rpc GetPending (GetPendingRequest) returns (GetPendingResponse) {}
    rpc GetBySubmitter (GetBySubmitterRequest) returns (GetBySubmitterResponse) {}

    //tagging
    rpc ApproveTag(ApproveTagRequest) returns (ApproveTagResponse) {}
    rpc RejectTag(RejectTagRequest) returns (RejectTagResponse) {}
    rpc RejectTagAllUnapproved(RejectTagAllUnapprovedRequest) returns (RejectTagAllUnapprovedResponse) {}

    //submissions
    rpc Submit (SubmitRequest) returns (SubmitResponse) {} 
    rpc DeletePending (DeletePendingRequest) returns (DeletePendingResponse) {}

    //work related
    rpc GetWork (GetWorkRequest) returns (GetWorkResponse) {}
    rpc CompleteWork (CompleteWorkRequest) returns (CompleteWorkResponse) {}
    rpc RejectWork (RejectWorkRequest) returns (RejectWorkResponse) {}
    rpc WorkStatus (WorkStatusRequest) returns (WorkStatusResponse) {}

    //admin endpoint
    rpc ReplaceConfig (ReplaceConfigRequest) returns (ReplaceConfigResponse) {}
    rpc ReplaceDesc (ReplaceDescRequest) returns (ReplaceDescResponse) {}
}

message Entry {
    //basic info
    string id = 1 [json_name="_id"];
    uint64 create_date = 2 [json_name="create_date"];

    //key fields
    string config = 3 [json_name="config"];
    string description = 4 [json_name="description"];
    string submitter = 5 [json_name="submitter"];
    
    //db tagging data
    repeated model.DBTag accepted_tags = 6 [json_name="accepted_tags"];
    repeated model.DBTag rejected_tags = 7 [json_name="rejected_tags"];
    bool is_db_valid = 8 [json_name="is_db_valid"];
    // string upgrade_failed = 20

    //these fields are updated on every rerun
    string share_key = 9 [json_name="share_key"];
    uint64 last_update = 10 [json_name="last_update"];
    string hash = 11 [json_name="hash"];
    EntrySummary summary = 12 [json_name="summary"];

}

message EntrySummary {
    model.DescriptiveStats sim_duration = 1 [json_name="sim_duration"];
    model.SimMode mode = 2 [json_name="mode"];
    
    //indexing data
    model.DescriptiveStats total_damage = 3 [json_name="total_damage"];
    repeated string char_names = 4 [json_name="char_names"];
    int32 target_count = 5 [json_name="target_count"];
    double mean_dps_per_target = 6 [json_name="mean_dps_per_target"];

    //detailed results
    repeated model.Character team = 7 [json_name="team"];
    map<string, model.DescriptiveStats> dps_by_target = 8 [json_name="dps_by_target"];
}

message Entries {
    repeated Entry data = 1 [json_name="data"];
}

message QueryOpt {
    google.protobuf.Struct query = 1 [json_name="query"];
    google.protobuf.Struct sort = 2 [json_name="sort"];
    google.protobuf.Struct project = 3 [json_name="project"];
    int64 skip = 4 [json_name="skip"];
    int64 limit = 5 [json_name="limit"];
}

message ComputeWork {
    string id = 1 [json_name="_id"];
    string config = 2 [json_name="config"];
    int32 iterations = 3 [json_name="iterations"];
}

message GetRequest {
    QueryOpt query = 1;
}

message GetResponse {
    Entries data = 1;
}

message GetOneRequest {
    string id = 1 [json_name="_id"];
}

message GetOneResponse {
    Entry data = 1;
}

message GetPendingRequest {
    model.DBTag tag = 1;
    QueryOpt query = 2;
}

message GetPendingResponse {
    Entries data = 1;
}

message GetBySubmitterRequest {
    string submitter = 1;
    QueryOpt query = 2; 
}

message GetBySubmitterResponse {
    Entries data = 1;
}

message GetAllRequest {
    QueryOpt query = 1;
}

message GetAllResponse {
    Entries data = 1;
}

//tagging related

message ApproveTagRequest {
    string id = 1 [json_name="id"];
    model.DBTag tag = 2 [json_name="tag"];
}

message ApproveTagResponse {
    string id = 1 [json_name="id"];
}

message RejectTagRequest {
    string id = 1 [json_name="id"];
    model.DBTag tag = 2 [json_name="tag"];
}

message RejectTagResponse {
    string id = 1 [json_name="id"];
}

message RejectTagAllUnapprovedRequest {
    model.DBTag tag = 1 [json_name="tag"];
}

message RejectTagAllUnapprovedResponse {
    int64 count = 1 [json_name="count"];
}

//submission related

message SubmitRequest {
    string config = 1;
    string submitter = 2; //submitter discord id 
    string description = 3;
}

message SubmitResponse {
    string id = 1 [json_name="_id"];
}

message DeletePendingRequest {
    string id = 1 [json_name="_id"];
    string sender = 2 [json_name="sender"];
}

message DeletePendingResponse {
    string id = 1 [json_name="_id"];
}

//work stuff

message GetWorkRequest {}

message GetWorkResponse {
    repeated ComputeWork data = 1 [json_name="data"];
}

message RejectWorkRequest {
    string id = 1;
    string reason = 2;
    string hash = 3;
}

message RejectWorkResponse {
}

message CompleteWorkRequest {
    string id = 1 [json_name="_id"];
    model.SimulationResult result = 2; 
}

message CompleteWorkResponse {
    string id = 1 [json_name="_id"];
}

message WorkStatusRequest {}

message WorkStatusResponse {
    int32 todo_count = 1 [json_name="todo_count"];
    int32 total_count = 2 [json_name="total_count"];
}

//admin stuff

message ReplaceConfigRequest {
    string id = 1 [json_name="_id"];
    string config = 2 [json_name="config"];
    model.DBTag source_tag = 3 [json_name="source_tag"];
}

message ReplaceConfigResponse {
    string id = 1 [json_name="_id"];
}

message ReplaceDescRequest {
    string id = 1 [json_name="_id"];
    string desc = 2 [json_name="desc"];
    model.DBTag source_tag = 3 [json_name="source_tag"];
}

message ReplaceDescResponse {
    string id = 1 [json_name="_id"];
}