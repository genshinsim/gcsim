// Code generated by "pipeline"; DO NOT EDIT.
package chongyun

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	5: {"collision"},
	6: {"collision"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Chongyun, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][]float64{
		attack_1,
		attack_2,
		attack_3,
		attack_4,
	}
)

var (
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.70004,
		0.75702,
		0.814,
		0.8954,
		0.95238,
		1.0175,
		1.10704,
		1.19658,
		1.28612,
		1.3838,
		1.48148,
		1.57916,
		1.67684,
		1.77452,
		1.8722,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.63124,
		0.68262,
		0.734,
		0.8074,
		0.85878,
		0.9175,
		0.99824,
		1.07898,
		1.15972,
		1.2478,
		1.33588,
		1.42396,
		1.51204,
		1.60012,
		1.6882,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.80324,
		0.86862,
		0.934,
		1.0274,
		1.09278,
		1.1675,
		1.27024,
		1.37298,
		1.47572,
		1.5878,
		1.69988,
		1.81196,
		1.92404,
		2.03612,
		2.1482,
	}
	// attack: attack_4 = [3]
	attack_4 = []float64{
		1.01222,
		1.09461,
		1.177,
		1.2947,
		1.37709,
		1.47125,
		1.60072,
		1.73019,
		1.85966,
		2.0009,
		2.14214,
		2.28338,
		2.42462,
		2.56586,
		2.7071,
	}
	// attack: collision = [8]
	collision = []float64{
		0.745878,
		0.806589,
		0.8673,
		0.95403,
		1.014741,
		1.084125,
		1.179528,
		1.274931,
		1.370334,
		1.47441,
		1.578486,
		1.682562,
		1.786638,
		1.890714,
		1.99479,
	}
	// attack: highPlunge = [10]
	highPlunge = []float64{
		1.862889,
		2.01452,
		2.16615,
		2.382765,
		2.534396,
		2.707688,
		2.945964,
		3.184241,
		3.422517,
		3.682455,
		3.942393,
		4.202331,
		4.462269,
		4.722207,
		4.982145,
	}
	// attack: lowPlunge = [9]
	lowPlunge = []float64{
		1.49144,
		1.612836,
		1.734233,
		1.907656,
		2.029052,
		2.167791,
		2.358556,
		2.549322,
		2.740087,
		2.948195,
		3.156303,
		3.364411,
		3.572519,
		3.780627,
		3.988735,
	}
	// skill: infuseDur = [1]
	infuseDur = []float64{
		2,
		2.1,
		2.2,
		2.3,
		2.4,
		2.5,
		2.6,
		2.7,
		2.8,
		2.9,
		3,
		3,
		3,
		3,
		3,
	}
	// skill: skill = [0]
	skill = []float64{
		1.7204,
		1.84943,
		1.97846,
		2.1505,
		2.27953,
		2.40856,
		2.5806,
		2.75264,
		2.92468,
		3.09672,
		3.26876,
		3.4408,
		3.65585,
		3.8709,
		4.08595,
	}
	// burst: burst = [0]
	burst = []float64{
		1.424,
		1.5308,
		1.6376,
		1.78,
		1.8868,
		1.9936,
		2.136,
		2.2784,
		2.4208,
		2.5632,
		2.7056,
		2.848,
		3.026,
		3.204,
		3.382,
	}
)
