// Code generated by "pipeline"; DO NOT EDIT.
package sara

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	3: {"travel"},
	7: {"hold", "travel", "weakspot"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Sara, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][]float64{
		attack_1,
		attack_2,
		attack_3,
		attack_4,
		attack_5,
	}
)

var (
	// attack: aim = [5]
	aim = []float64{
		0.4386,
		0.4743,
		0.51,
		0.561,
		0.5967,
		0.6375,
		0.6936,
		0.7497,
		0.8058,
		0.867,
		0.9282,
		0.9894,
		1.0506,
		1.1118,
		1.173,
	}
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.36894,
		0.39897,
		0.429,
		0.4719,
		0.50193,
		0.53625,
		0.58344,
		0.63063,
		0.67782,
		0.7293,
		0.78078,
		0.83226,
		0.88374,
		0.93522,
		0.9867,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.387,
		0.4185,
		0.45,
		0.495,
		0.5265,
		0.5625,
		0.612,
		0.6615,
		0.711,
		0.765,
		0.819,
		0.873,
		0.927,
		0.981,
		1.035,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.48504,
		0.52452,
		0.564,
		0.6204,
		0.65988,
		0.705,
		0.76704,
		0.82908,
		0.89112,
		0.9588,
		1.02648,
		1.09416,
		1.16184,
		1.22952,
		1.2972,
	}
	// attack: attack_4 = [3]
	attack_4 = []float64{
		0.50396,
		0.54498,
		0.586,
		0.6446,
		0.68562,
		0.7325,
		0.79696,
		0.86142,
		0.92588,
		0.9962,
		1.06652,
		1.13684,
		1.20716,
		1.27748,
		1.3478,
	}
	// attack: attack_5 = [4]
	attack_5 = []float64{
		0.5805,
		0.62775,
		0.675,
		0.7425,
		0.78975,
		0.84375,
		0.918,
		0.99225,
		1.0665,
		1.1475,
		1.2285,
		1.3095,
		1.3905,
		1.4715,
		1.5525,
	}
	// attack: fullaim = [6]
	fullaim = []float64{
		1.24,
		1.333,
		1.426,
		1.55,
		1.643,
		1.736,
		1.86,
		1.984,
		2.108,
		2.232,
		2.356,
		2.48,
		2.635,
		2.79,
		2.945,
	}
	// skill: atkBuff = [1]
	atkBuff = []float64{
		0.4296,
		0.46182,
		0.49404,
		0.537,
		0.56922,
		0.60144,
		0.6444,
		0.68736,
		0.73032,
		0.77328,
		0.81624,
		0.8592,
		0.9129,
		0.9666,
		1.0203,
	}
	// skill: skill = [0]
	skill = []float64{
		1.2576,
		1.35192,
		1.44624,
		1.572,
		1.66632,
		1.76064,
		1.8864,
		2.01216,
		2.13792,
		2.26368,
		2.38944,
		2.5152,
		2.6724,
		2.8296,
		2.9868,
	}
	// burst: burstCluster = [1]
	burstCluster = []float64{
		0.3412,
		0.36679,
		0.39238,
		0.4265,
		0.45209,
		0.47768,
		0.5118,
		0.54592,
		0.58004,
		0.61416,
		0.64828,
		0.6824,
		0.72505,
		0.7677,
		0.81035,
	}
	// burst: burstMain = [0]
	burstMain = []float64{
		4.096,
		4.4032,
		4.7104,
		5.12,
		5.4272,
		5.7344,
		6.144,
		6.5536,
		6.9632,
		7.3728,
		7.7824,
		8.192,
		8.704,
		9.216,
		9.728,
	}
)
