// Code generated by "pipeline"; DO NOT EDIT.
package yoimiya

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	3: {"travel"},
	7: {"hold", "travel", "weakspot", "kindling_travel"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Yoimiya, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][][]float64{
		attack_1,
		{attack_2},
		{attack_3},
		attack_4,
		{attack_5},
	}
)

var (
	// attack: aim = [5]
	aim = []float64{
		0.4386,
		0.4743,
		0.51,
		0.561,
		0.5967,
		0.6375,
		0.6936,
		0.7497,
		0.8058,
		0.867,
		0.9282,
		0.9894,
		1.0506,
		1.1118,
		1.173,
	}
	// attack: aimExtra = [7]
	aimExtra = []float64{
		0.164,
		0.1763,
		0.1886,
		0.205,
		0.2173,
		0.2296,
		0.246,
		0.2624,
		0.2788,
		0.2952,
		0.3116,
		0.328,
		0.3485,
		0.369,
		0.3895,
	}
	// attack: attack_1 = [0 0]
	attack_1 = [][]float64{
		{
			0.3564,
			0.3807,
			0.405,
			0.4374,
			0.4617,
			0.49005,
			0.5265,
			0.56295,
			0.5994,
			0.63585,
			0.6723,
			0.70875,
			0.7452,
			0.78165,
			0.8181,
		},
		{
			0.3564,
			0.3807,
			0.405,
			0.4374,
			0.4617,
			0.49005,
			0.5265,
			0.56295,
			0.5994,
			0.63585,
			0.6723,
			0.70875,
			0.7452,
			0.78165,
			0.8181,
		},
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.68376,
		0.73038,
		0.777,
		0.83916,
		0.88578,
		0.94017,
		1.0101,
		1.08003,
		1.14996,
		1.21989,
		1.28982,
		1.35975,
		1.42968,
		1.49961,
		1.56954,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.888888,
		0.949494,
		1.0101,
		1.090908,
		1.151514,
		1.222221,
		1.31313,
		1.404039,
		1.494948,
		1.585857,
		1.676766,
		1.767675,
		1.858584,
		1.949493,
		2.040402,
	}
	// attack: attack_4 = [3 3]
	attack_4 = [][]float64{
		{
			0.4642,
			0.49585,
			0.5275,
			0.5697,
			0.60135,
			0.638275,
			0.68575,
			0.733225,
			0.7807,
			0.828175,
			0.87565,
			0.923125,
			0.9706,
			1.018075,
			1.06555,
		},
		{
			0.4642,
			0.49585,
			0.5275,
			0.5697,
			0.60135,
			0.638275,
			0.68575,
			0.733225,
			0.7807,
			0.828175,
			0.87565,
			0.923125,
			0.9706,
			1.018075,
			1.06555,
		},
	}
	// attack: attack_5 = [4]
	attack_5 = []float64{
		1.05864,
		1.13082,
		1.203,
		1.29924,
		1.37142,
		1.45563,
		1.5639,
		1.67217,
		1.78044,
		1.88871,
		1.99698,
		2.10525,
		2.21352,
		2.32179,
		2.43006,
	}
	// attack: fullaim = [6]
	fullaim = []float64{
		1.24,
		1.333,
		1.426,
		1.55,
		1.643,
		1.736,
		1.86,
		1.984,
		2.108,
		2.232,
		2.356,
		2.48,
		2.635,
		2.79,
		2.945,
	}
	// skill: skill = [3]
	skill = []float64{
		1.37909,
		1.40179,
		1.42449,
		1.454,
		1.4767,
		1.4994,
		1.52891,
		1.55842,
		1.58793,
		1.61744,
		1.64695,
		1.67646,
		1.70597,
		1.73548,
		1.76499,
	}
	// burst: burst = [0]
	burst = []float64{
		1.272,
		1.3674,
		1.4628,
		1.59,
		1.6854,
		1.7808,
		1.908,
		2.0352,
		2.1624,
		2.2896,
		2.4168,
		2.544,
		2.703,
		2.862,
		3.021,
	}
	// burst: burstExplode = [1]
	burstExplode = []float64{
		1.22,
		1.3115,
		1.403,
		1.525,
		1.6165,
		1.708,
		1.83,
		1.952,
		2.074,
		2.196,
		2.318,
		2.44,
		2.5925,
		2.745,
		2.8975,
	}
)
