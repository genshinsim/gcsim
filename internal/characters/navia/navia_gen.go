// Code generated by "pipeline"; DO NOT EDIT.
package navia

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	1: {"hold"},
	5: {"collision"},
	6: {"collision"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Navia, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	auto = [][][]float64{
		{auto_1},
		{auto_2},
		auto_3,
		{auto_4},
	}
)

var (
	// attack: auto_1 = [0]
	auto_1 = []float64{
		0.9351900219917297,
		1.0113099813461304,
		1.0874300003051758,
		1.1961729526519775,
		1.272292971611023,
		1.3592870235443115,
		1.4789049625396729,
		1.5985219478607178,
		1.7181390523910522,
		1.8486310243606567,
		1.9791229963302612,
		2.1096138954162598,
		2.2401061058044434,
		2.3705968856811523,
		2.501089096069336,
	}
	// attack: auto_2 = [1]
	auto_2 = []float64{
		0.8650649785995483,
		0.9354779720306396,
		1.0058900117874146,
		1.1064790487289429,
		1.1768909692764282,
		1.2573620080947876,
		1.3680100440979004,
		1.4786579608917236,
		1.5893059968948364,
		1.7100130319595337,
		1.8307199478149414,
		1.9514269828796387,
		2.0721330642700195,
		2.192840099334717,
		2.313546895980835,
	}
	// attack: auto_3 = [2 2 2]
	auto_3 = [][]float64{
		{
			0.3488590121269226,
			0.37725499272346497,
			0.40564998984336853,
			0.4462150037288666,
			0.47461000084877014,
			0.5070620179176331,
			0.5516840219497681,
			0.5963060259819031,
			0.6409270167350769,
			0.6896049976348877,
			0.7382829785346985,
			0.786961019039154,
			0.8356389999389648,
			0.8843169808387756,
			0.9329950213432312,
		},
		{
			0.3488590121269226,
			0.37725499272346497,
			0.40564998984336853,
			0.4462150037288666,
			0.47461000084877014,
			0.5070620179176331,
			0.5516840219497681,
			0.5963060259819031,
			0.6409270167350769,
			0.6896049976348877,
			0.7382829785346985,
			0.786961019039154,
			0.8356389999389648,
			0.8843169808387756,
			0.9329950213432312,
		},
		{
			0.3488590121269226,
			0.37725499272346497,
			0.40564998984336853,
			0.4462150037288666,
			0.47461000084877014,
			0.5070620179176331,
			0.5516840219497681,
			0.5963060259819031,
			0.6409270167350769,
			0.6896049976348877,
			0.7382829785346985,
			0.786961019039154,
			0.8356389999389648,
			0.8843169808387756,
			0.9329950213432312,
		},
	}
	// attack: auto_4 = [3]
	auto_4 = []float64{
		1.3343160152435303,
		1.4429229497909546,
		1.5515300035476685,
		1.7066830396652222,
		1.8152899742126465,
		1.939411997795105,
		2.1100809574127197,
		2.2807490825653076,
		2.4514169692993164,
		2.637600898742676,
		2.8237850666046143,
		3.0099680423736572,
		3.1961519718170166,
		3.3823349475860596,
		3.568519115447998,
	}
	// attack: collision = [8]
	collision = []float64{
		0.7458779811859131,
		0.8065890073776245,
		0.8672999739646912,
		0.9540299773216248,
		1.0147409439086914,
		1.08412504196167,
		1.179527997970581,
		1.2749309539794922,
		1.3703340291976929,
		1.474410057067871,
		1.5784859657287598,
		1.682561993598938,
		1.7866380214691162,
		1.8907140493392944,
		1.994789958000183,
	}
	// attack: highPlunge = [10]
	highPlunge = []float64{
		1.862889051437378,
		2.0145199298858643,
		2.1661500930786133,
		2.382765054702759,
		2.534395933151245,
		2.707688093185425,
		2.9459640979766846,
		3.1842410564422607,
		3.4225170612335205,
		3.682455062866211,
		3.9423930644989014,
		4.202331066131592,
		4.462268829345703,
		4.722207069396973,
		4.982144832611084,
	}
	// attack: lowPlunge = [9]
	lowPlunge = []float64{
		1.4914400577545166,
		1.6128360033035278,
		1.734233021736145,
		1.907655954360962,
		2.0290520191192627,
		2.1677908897399902,
		2.358556032180786,
		2.5493218898773193,
		2.7400870323181152,
		2.948194980621338,
		3.1563029289245605,
		3.3644111156463623,
		3.572519063949585,
		3.7806270122528076,
		3.9887349605560303,
	}
	// skill: skillblade = [4]
	skillblade = []float64{
		0.36000001430511475,
		0.3869999945163727,
		0.414000004529953,
		0.44999998807907104,
		0.47699999809265137,
		0.5040000081062317,
		0.5400000214576721,
		0.5759999752044678,
		0.6119999885559082,
		0.6480000019073486,
		0.6840000152587891,
		0.7200000286102295,
		0.7649999856948853,
		0.8100000023841858,
		0.8550000190734863,
	}
	// skill: skillshotgun = [0]
	skillshotgun = []float64{
		3.947999954223633,
		4.244100093841553,
		4.540200233459473,
		4.934999942779541,
		5.231100082397461,
		5.527200222015381,
		5.921999931335449,
		6.316800117492676,
		6.711599826812744,
		7.106400012969971,
		7.501200199127197,
		7.895999908447266,
		8.38949966430664,
		8.883000373840332,
		9.376500129699707,
	}
	// burst: burst = [0 1]
	burst = [][]float64{
		{
			0.7519999742507935,
			0.8083999752998352,
			0.864799976348877,
			0.9399999976158142,
			0.996399998664856,
			1.0528000593185425,
			1.128000020980835,
			1.2031999826431274,
			1.27839994430542,
			1.353600025177002,
			1.4287999868392944,
			1.503999948501587,
			1.5980000495910645,
			1.6920000314712524,
			1.7860000133514404,
		},
		{
			0.43149998784065247,
			0.46386298537254333,
			0.4962249994277954,
			0.5393750071525574,
			0.5717380046844482,
			0.6040999889373779,
			0.6472499966621399,
			0.6904000043869019,
			0.7335500121116638,
			0.7767000198364258,
			0.8198500275611877,
			0.8629999756813049,
			0.9169380068778992,
			0.9708750247955322,
			1.0248130559921265,
		},
	}
)
