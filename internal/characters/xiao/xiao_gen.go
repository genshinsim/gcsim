// Code generated by "pipeline"; DO NOT EDIT.
package xiao

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	5: {"collision"},
	6: {"collision"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Xiao, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][][]float64{
		attack_1,
		{attack_2},
		{attack_3},
		attack_4,
		{attack_5},
		{attack_6},
	}
)

var (
	// attack: attack_1 = [0 0]
	attack_1 = [][]float64{
		{
			0.27544,
			0.29422,
			0.313,
			0.33804,
			0.35682,
			0.37873,
			0.4069,
			0.43507,
			0.46324,
			0.49141,
			0.51958,
			0.54775,
			0.57592,
			0.60409,
			0.63226,
		},
		{
			0.27544,
			0.29422,
			0.313,
			0.33804,
			0.35682,
			0.37873,
			0.4069,
			0.43507,
			0.46324,
			0.49141,
			0.51958,
			0.54775,
			0.57592,
			0.60409,
			0.63226,
		},
	}
	// attack: attack_2 = [2]
	attack_2 = []float64{
		0.56936,
		0.60818,
		0.647,
		0.69876,
		0.73758,
		0.78287,
		0.8411,
		0.89933,
		0.95756,
		1.01579,
		1.07402,
		1.13225,
		1.19048,
		1.24871,
		1.30694,
	}
	// attack: attack_3 = [3]
	attack_3 = []float64{
		0.68552,
		0.73226,
		0.779,
		0.84132,
		0.88806,
		0.94259,
		1.0127,
		1.08281,
		1.15292,
		1.22303,
		1.29314,
		1.36325,
		1.43336,
		1.50347,
		1.57358,
	}
	// attack: attack_4 = [4 4]
	attack_4 = [][]float64{
		{
			0.37664,
			0.40232,
			0.428,
			0.46224,
			0.48792,
			0.51788,
			0.5564,
			0.59492,
			0.63344,
			0.67196,
			0.71048,
			0.749,
			0.78752,
			0.82604,
			0.86456,
		},
		{
			0.37664,
			0.40232,
			0.428,
			0.46224,
			0.48792,
			0.51788,
			0.5564,
			0.59492,
			0.63344,
			0.67196,
			0.71048,
			0.749,
			0.78752,
			0.82604,
			0.86456,
		},
	}
	// attack: attack_5 = [6]
	attack_5 = []float64{
		0.71544,
		0.76422,
		0.813,
		0.87804,
		0.92682,
		0.98373,
		1.0569,
		1.13007,
		1.20324,
		1.27641,
		1.34958,
		1.42275,
		1.49592,
		1.56909,
		1.64226,
	}
	// attack: attack_6 = [7]
	attack_6 = []float64{
		0.95832,
		1.02366,
		1.089,
		1.17612,
		1.24146,
		1.31769,
		1.4157,
		1.51371,
		1.61172,
		1.70973,
		1.80774,
		1.90575,
		2.00376,
		2.10177,
		2.19978,
	}
	// attack: charge = [8]
	charge = []float64{
		1.21088,
		1.29344,
		1.376,
		1.48608,
		1.56864,
		1.66496,
		1.7888,
		1.91264,
		2.03648,
		2.16032,
		2.28416,
		2.408,
		2.53184,
		2.65568,
		2.77952,
	}
	// attack: highPlunge = [12]
	highPlunge = []float64{
		2.043855,
		2.210216,
		2.376576,
		2.614234,
		2.780594,
		2.97072,
		3.232143,
		3.493567,
		3.75499,
		4.040179,
		4.325368,
		4.610557,
		4.895747,
		5.180936,
		5.466125,
	}
	// attack: lowPlunge = [11]
	lowPlunge = []float64{
		1.636323,
		1.769512,
		1.902701,
		2.092971,
		2.22616,
		2.378376,
		2.587673,
		2.79697,
		3.006267,
		3.234591,
		3.462915,
		3.69124,
		3.919564,
		4.147888,
		4.376212,
	}
	// attack: plunge = [10]
	plunge = []float64{
		0.818335,
		0.884943,
		0.951552,
		1.046707,
		1.113316,
		1.18944,
		1.294111,
		1.398781,
		1.503452,
		1.617638,
		1.731825,
		1.846011,
		1.960197,
		2.074383,
		2.18857,
	}
	// skill: skill = [0]
	skill = []float64{
		2.528,
		2.7176,
		2.9072,
		3.16,
		3.3496,
		3.5392,
		3.792,
		4.0448,
		4.2976,
		4.5504,
		4.8032,
		5.056,
		5.372,
		5.688,
		6.004,
	}
	// burst: burstBonus = [0]
	burstBonus = []float64{
		0.5845,
		0.6195,
		0.6545,
		0.7,
		0.735,
		0.77,
		0.8155,
		0.861,
		0.9065,
		0.952,
		0.9975,
		1.043,
		1.0885,
		1.134,
		1.1795,
	}
	// burst: burstDrain = [1]
	burstDrain = []float64{
		0.03,
		0.03,
		0.03,
		0.025,
		0.025,
		0.025,
		0.02,
		0.02,
		0.02,
		0.02,
		0.02,
		0.02,
		0.02,
		0.02,
		0.02,
	}
)
