// Code generated by "pipeline"; DO NOT EDIT.
package wriothesley

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	5: {"collision"},
	6: {"collision"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Wriothesley, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][][]float64{
		{attack_1},
		{attack_2},
		{attack_3},
		attack_4,
		{attack_5},
	}
)

var (
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.5335959792137146,
		0.5770279765129089,
		0.6204599738121033,
		0.6825060248374939,
		0.7259380221366882,
		0.7755749821662903,
		0.8438259959220886,
		0.9120759963989258,
		0.9803270101547241,
		1.0547820329666138,
		1.1292370557785034,
		1.2036919593811035,
		1.2781480550765991,
		1.3526029586791992,
		1.4270579814910889,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.5179870128631592,
		0.5601480007171631,
		0.6023100018501282,
		0.6625409722328186,
		0.7047029733657837,
		0.752888023853302,
		0.8191419839859009,
		0.8853960037231445,
		0.9516500234603882,
		1.0239269733428955,
		1.0962040424346924,
		1.1684809923171997,
		1.240759015083313,
		1.3130359649658203,
		1.3853130340576172,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.6722279787063599,
		0.7269440293312073,
		0.7816600203514099,
		0.8598260283470154,
		0.914542019367218,
		0.9770749807357788,
		1.0630580186843872,
		1.1490399837493896,
		1.235023021697998,
		1.3288220167160034,
		1.4226210117340088,
		1.5164200067520142,
		1.610219955444336,
		1.7040189504623413,
		1.7978179454803467,
	}
	// attack: attack_4 = [3 3]
	attack_4 = [][]float64{
		{
			0.37904098629951477,
			0.4098930060863495,
			0.4407449960708618,
			0.48482000827789307,
			0.5156720280647278,
			0.5509309768676758,
			0.5994129776954651,
			0.6478949785232544,
			0.6963769793510437,
			0.7492660284042358,
			0.8021559715270996,
			0.8550450205802917,
			0.9079350233078003,
			0.9608240127563477,
			1.013713002204895,
		},
		{
			0.37904098629951477,
			0.4098930060863495,
			0.4407449960708618,
			0.48482000827789307,
			0.5156720280647278,
			0.5509309768676758,
			0.5994129776954651,
			0.6478949785232544,
			0.6963769793510437,
			0.7492660284042358,
			0.8021559715270996,
			0.8550450205802917,
			0.9079350233078003,
			0.9608240127563477,
			1.013713002204895,
		},
	}
	// attack: attack_5 = [5]
	attack_5 = []float64{
		0.9074199795722961,
		0.9812800288200378,
		1.0551400184631348,
		1.1606539487838745,
		1.2345139980316162,
		1.3189250230789185,
		1.4349900484085083,
		1.5510560274124146,
		1.6671210527420044,
		1.7937380075454712,
		1.920354962348938,
		2.0469720363616943,
		2.1735880374908447,
		2.3002049922943115,
		2.4268219470977783,
	}
	// attack: charge = [6]
	charge = []float64{
		1.5296000242233276,
		1.644320011138916,
		1.7590399980545044,
		1.9119999408721924,
		2.0267200469970703,
		2.141439914703369,
		2.2943999767303467,
		2.447360038757324,
		2.6003201007843018,
		2.7532799243927,
		2.9062399864196777,
		3.0592000484466553,
		3.2504000663757324,
		3.4416000843048096,
		3.6328001022338867,
	}
	// attack: collision = [8]
	collision = []float64{
		0.5682880282402039,
		0.6145439743995667,
		0.6607999801635742,
		0.7268800139427185,
		0.7731360197067261,
		0.8259999752044678,
		0.898688018321991,
		0.9713760018348694,
		1.0440640449523926,
		1.12336003780365,
		1.2026560306549072,
		1.2819520235061646,
		1.3612480163574219,
		1.4405440092086792,
		1.5198400020599365,
	}
	// attack: highPlunge = [10]
	highPlunge = []float64{
		1.4193439483642578,
		1.534872055053711,
		1.6504000425338745,
		1.815440058708191,
		1.9309680461883545,
		2.062999963760376,
		2.24454402923584,
		2.4260880947113037,
		2.6076319217681885,
		2.8056800365448,
		3.003727912902832,
		3.2017760276794434,
		3.3998239040374756,
		3.597872018814087,
		3.795919895172119,
	}
	// attack: lowPlunge = [9]
	lowPlunge = []float64{
		1.136335015296936,
		1.228827953338623,
		1.3213200569152832,
		1.4534519910812378,
		1.5459439754486084,
		1.6516499519348145,
		1.7969950437545776,
		1.9423400163650513,
		2.087686061859131,
		2.246243953704834,
		2.404802083969116,
		2.5633609294891357,
		2.721919059753418,
		2.8804779052734375,
		3.0390360355377197,
	}
	// skill: skill = [0]
	skill = []float64{
		1.4316949844360352,
		1.4575450420379639,
		1.483394980430603,
		1.5169999599456787,
		1.5428500175476074,
		1.5686999559402466,
		1.6023050546646118,
		1.6359100341796875,
		1.6695150136947632,
		1.7031199932098389,
		1.7367249727249146,
		1.7703299522399902,
		1.8039350509643555,
		1.8375400304794312,
		1.8711450099945068,
	}
	// burst: burst = [0]
	burst = []float64{
		1.2719999551773071,
		1.367400050163269,
		1.4628000259399414,
		1.590000033378601,
		1.6854000091552734,
		1.7807999849319458,
		1.9079999923706055,
		2.0352001190185547,
		2.162400007247925,
		2.289599895477295,
		2.416800022125244,
		2.5439999103546143,
		2.703000068664551,
		2.861999988555908,
		3.0209999084472656,
	}
	// burst: burstOusia = [1]
	burstOusia = []float64{
		0.42399999499320984,
		0.45579999685287476,
		0.4875999987125397,
		0.5299999713897705,
		0.5618000030517578,
		0.5935999751091003,
		0.6359999775886536,
		0.6783999800682068,
		0.72079998254776,
		0.7631999850273132,
		0.8055999875068665,
		0.8479999899864197,
		0.9010000228881836,
		0.9539999961853027,
		1.0069999694824219,
	}
)
