package travelerelectro

import (
	"fmt"
	"github.com/genshinsim/gcsim/pkg/core"
)

type abundanceAmulet struct {
	Collected    bool
	CollectableF int
}

func (a *abundanceAmulet) tryToCollect(f int, collector core.Character, emc *char) bool {
	// if this amulet has already been collected, ignore it
	if a.Collected {
		return false
	}

	if f <= a.CollectableF {
		return false
	}

	// apply small frame delay to emulate the dash to pickup amulet
	delay := 30 // .5s

	mER := make([]float64, core.EndStatType)
	mER[core.ER] = 0.20

	// handle a4 - Increases the Energy Recharge effect granted by Lightning Blade's Abundance Amulet by 10% of the
	//	 Traveler's Energy Recharge.
	//   This effect only takes into account the Traveler's original Energy Recharge.
	//   Picking up an Amulet to increase the Traveler's ER will not impact the amount of ER shared by
	//   Resounding Roar for other Amulet pickups.
	mER[core.ER] += emc.Stats[core.ER] * .1

	collector.AddTask(func() {
		// apply flat energy
		buffEnergy := 4.0

		// c4 - When a character obtains Abundance Amulets generated by Lightning Blade, if this character's Energy
		//   is less than 35%, the Energy restored by the Abundance Amulets is increased by 100%.
		if emc.Base.Cons > 3 {
			currentEnergyP := collector.CurrentEnergy() / collector.MaxEnergy()

			if currentEnergyP > 0.35 {
				buffEnergy = buffEnergy * 2.0
			}
		}

		collector.AddEnergy("abundance-amulet", buffEnergy)

		// handle a1 - When another nearby character in the party obtains an Abundance Amulet created by Lightning Blade,
		//   Lightning Blade's CD is decreased by 1.5s.
		emc.ReduceActionCooldown(core.ActionSkill, 90)

		// apply ER mod
		modDuration := 360 // 6s
		collector.AddMod(core.CharStatMod{
			Key:    "abundance-amulet",
			Expiry: f + modDuration,
			Amount: func() ([]float64, bool) {
				return mER, true
			},
		})
	}, fmt.Sprintf("pickup-abundance-amulet-%s", collector.Name()), delay)

	// set this amulet to collected
	a.Collected = true

	return true
}
