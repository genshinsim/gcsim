// Code generated by "pipeline"; DO NOT EDIT.
package furina

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	5: {"collision"},
	6: {"collision"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Furina, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][]float64{
		attack_1,
		attack_2,
		attack_3,
		attack_4,
	}
)

var (
	// attack: arkhe = [9]
	arkhe = []float64{
		0.09459999948740005,
		0.1023000031709671,
		0.10999999940395355,
		0.12099999934434891,
		0.12870000302791595,
		0.13750000298023224,
		0.14959999918937683,
		0.16169999539852142,
		0.1738000065088272,
		0.18700000643730164,
		0.20020000636577606,
		0.2134000062942505,
		0.22660000622272491,
		0.23980000615119934,
		0.2529999911785126,
	}
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.4838620126247406,
		0.5232459902763367,
		0.5626299977302551,
		0.618893027305603,
		0.6582769751548767,
		0.7032870054244995,
		0.7651770114898682,
		0.8270660042762756,
		0.8889549970626831,
		0.9564710259437561,
		1.023987054824829,
		1.0915019512176514,
		1.1590180397033691,
		1.226533055305481,
		1.2940490245819092,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.43729299306869507,
		0.47288599610328674,
		0.5084800124168396,
		0.559328019618988,
		0.5949220061302185,
		0.6355999708175659,
		0.6915330290794373,
		0.7474660277366638,
		0.8033980131149292,
		0.8644160032272339,
		0.9254339933395386,
		0.9864510297775269,
		1.0474690198898315,
		1.1084860563278198,
		1.1695040464401245,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.5511999726295471,
		0.5960649847984314,
		0.6409299969673157,
		0.7050229907035828,
		0.749888002872467,
		0.8011620044708252,
		0.8716650009155273,
		0.9421669840812683,
		1.0126689672470093,
		1.08958101272583,
		1.1664930582046509,
		1.2434040307998657,
		1.320315957069397,
		1.3972270488739014,
		1.4741389751434326,
	}
	// attack: attack_4 = [3]
	attack_4 = []float64{
		0.7329779863357544,
		0.7926390171051025,
		0.8522999882698059,
		0.937529981136322,
		0.9971910119056702,
		1.0653749704360962,
		1.159127950668335,
		1.2528810501098633,
		1.346634030342102,
		1.4489099979400635,
		1.551185965538025,
		1.6534620523452759,
		1.7557380199432373,
		1.8580139875411987,
		1.9602899551391602,
	}
	// attack: charge = [4]
	charge = []float64{
		0.7421799898147583,
		0.802590012550354,
		0.8629999756813049,
		0.9492999911308289,
		1.0097099542617798,
		1.0787500143051147,
		1.1736799478530884,
		1.2686100006103516,
		1.3635400533676147,
		1.4671000242233276,
		1.5706599950790405,
		1.6742199659347534,
		1.7777800559997559,
		1.8813400268554688,
		1.9848999977111816,
	}
	// attack: collision = [6]
	collision = []float64{
		0.6393240094184875,
		0.6913620233535767,
		0.743399977684021,
		0.8177400231361389,
		0.8697779774665833,
		0.9292500019073486,
		1.011023998260498,
		1.0927979946136475,
		1.1745719909667969,
		1.2637799978256226,
		1.3529880046844482,
		1.442196011543274,
		1.5314040184020996,
		1.6206120252609253,
		1.709820032119751,
	}
	// attack: highPlunge = [8]
	highPlunge = []float64{
		1.59676194190979,
		1.7267309427261353,
		1.8566999435424805,
		2.042370080947876,
		2.1723389625549316,
		2.3208749294281006,
		2.5251119136810303,
		2.72934889793396,
		2.9335858821868896,
		3.1563899517059326,
		3.3791940212249756,
		3.6019980907440186,
		3.8248019218444824,
		4.047605991363525,
		4.270410060882568,
	}
	// attack: lowPlunge = [7]
	lowPlunge = []float64{
		1.2783770561218262,
		1.3824310302734375,
		1.4864850044250488,
		1.635133981704712,
		1.7391870021820068,
		1.858106017112732,
		2.021620035171509,
		2.1851329803466797,
		2.3486459255218506,
		2.527024984359741,
		2.7054030895233154,
		2.8837809562683105,
		3.0621590614318848,
		3.24053692817688,
		3.418915033340454,
	}
	// skill: skillChevalmarin = [3]
	skillChevalmarin = []float64{
		0.03232000023126602,
		0.03474399819970131,
		0.037167999893426895,
		0.04039999842643738,
		0.042824000120162964,
		0.04524800181388855,
		0.04848000034689903,
		0.051711998879909515,
		0.0549440011382103,
		0.05817599967122078,
		0.06140799820423126,
		0.06464000046253204,
		0.06868000328540802,
		0.0727199986577034,
		0.07676000148057938,
	}
	// skill: skillCrabaletta = [4]
	skillCrabaletta = []float64{
		0.08287999778985977,
		0.08909600228071213,
		0.09531199932098389,
		0.10360000282526016,
		0.10981599986553192,
		0.11603199690580368,
		0.12432000041007996,
		0.13260799646377563,
		0.1408960074186325,
		0.14918400347232819,
		0.15747199952602386,
		0.16575999557971954,
		0.17611999809741974,
		0.18648000061511993,
		0.19684000313282013,
	}
	// skill: skillOusiaBubble = [0]
	skillOusiaBubble = []float64{
		0.07863999903202057,
		0.08453799784183502,
		0.09043599665164948,
		0.09830000251531601,
		0.10419800132513046,
		0.11009600013494492,
		0.11795999854803085,
		0.1258240044116974,
		0.13368800282478333,
		0.14155200123786926,
		0.1494159996509552,
		0.15727999806404114,
		0.16710999608039856,
		0.17693999409675598,
		0.1867700070142746,
	}
	// skill: skillSingerHealFlat = [9]
	skillSingerHealFlat = []float64{
		462.2253112792969,
		508.4542541503906,
		558.53564453125,
		612.4694213867188,
		670.255615234375,
		731.8942260742188,
		797.3851928710938,
		866.7286376953125,
		939.9244995117188,
		1016.9727783203125,
		1097.8734130859375,
		1182.62646484375,
		1271.2320556640625,
		1363.68994140625,
		1460.000244140625,
	}
	// skill: skillSingerHealScale = [8]
	skillSingerHealScale = []float64{
		0.04800000041723251,
		0.051600001752376556,
		0.0551999993622303,
		0.05999999865889549,
		0.06360000371932983,
		0.06719999760389328,
		0.07199999690055847,
		0.07680000364780426,
		0.08160000294446945,
		0.08640000224113464,
		0.09120000153779984,
		0.09600000083446503,
		0.10199999809265137,
		0.1080000028014183,
		0.11400000005960464,
	}
	// skill: skillUsher = [2]
	skillUsher = []float64{
		0.05959999933838844,
		0.06407000124454498,
		0.06853999942541122,
		0.07450000196695328,
		0.07897000014781952,
		0.08343999832868576,
		0.08940000087022781,
		0.09536000341176987,
		0.10131999850273132,
		0.10728000104427338,
		0.11324000358581543,
		0.11919999867677689,
		0.12665000557899475,
		0.13410000503063202,
		0.1415500044822693,
	}
	// burst: burstDMG = [0]
	burstDMG = []float64{
		0.11406400054693222,
		0.12261900305747986,
		0.1311739981174469,
		0.14258000254631042,
		0.15113499760627747,
		0.1596899926662445,
		0.17109599709510803,
		0.18250200152397156,
		0.19390900433063507,
		0.2053149938583374,
		0.21672199666500092,
		0.22812800109386444,
		0.24238599836826324,
		0.25664401054382324,
		0.27090200781822205,
	}
	// burst: burstFanfareDMGRatio = [4]
	burstFanfareDMGRatio = []float64{
		0.000699999975040555,
		0.0008999999845400453,
		0.0010999999940395355,
		0.0013000000035390258,
		0.001500000013038516,
		0.0017000000225380063,
		0.0019000000320374966,
		0.002099999925121665,
		0.002300000051036477,
		0.0024999999441206455,
		0.0027000000700354576,
		0.002899999963119626,
		0.003100000089034438,
		0.0032999999821186066,
		0.0035000001080334187,
	}
	// burst: burstFanfareHBRatio = [5]
	burstFanfareHBRatio = []float64{
		9.999999747378752e-05,
		0.00019999999494757503,
		0.0003000000142492354,
		0.00039999998989515007,
		0.0005000000237487257,
		0.0006000000284984708,
		0.000699999975040555,
		0.0007999999797903001,
		0.0008999999845400453,
		0.0010000000474974513,
		0.0010999999940395355,
		0.0012000000569969416,
		0.0013000000035390258,
		0.00139999995008111,
		0.001500000013038516,
	}
)
