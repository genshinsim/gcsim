// Code generated by "pipeline"; DO NOT EDIT.
package mona

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	1: {"hold"},
	8: {"f"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Mona, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][]float64{
		attack_1,
		attack_2,
		attack_3,
		attack_4,
	}
)

var (
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.376,
		0.4042,
		0.4324,
		0.47,
		0.4982,
		0.5264,
		0.564,
		0.6016,
		0.6392,
		0.6768,
		0.7144,
		0.752,
		0.799,
		0.846,
		0.893,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.36,
		0.387,
		0.414,
		0.45,
		0.477,
		0.504,
		0.54,
		0.576,
		0.612,
		0.648,
		0.684,
		0.72,
		0.765,
		0.81,
		0.855,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.448,
		0.4816,
		0.5152,
		0.56,
		0.5936,
		0.6272,
		0.672,
		0.7168,
		0.7616,
		0.8064,
		0.8512,
		0.896,
		0.952,
		1.008,
		1.064,
	}
	// attack: attack_4 = [3]
	attack_4 = []float64{
		0.5616,
		0.60372,
		0.64584,
		0.702,
		0.74412,
		0.78624,
		0.8424,
		0.89856,
		0.95472,
		1.01088,
		1.06704,
		1.1232,
		1.1934,
		1.2636,
		1.3338,
	}
	// attack: charge = [4]
	charge = []float64{
		1.4972,
		1.60949,
		1.72178,
		1.8715,
		1.98379,
		2.09608,
		2.2458,
		2.39552,
		2.54524,
		2.69496,
		2.850669,
		3.054288,
		3.257907,
		3.461526,
		3.665146,
	}
	// skill: skill = [1]
	skill = []float64{
		1.328,
		1.4276,
		1.5272,
		1.66,
		1.7596,
		1.8592,
		1.992,
		2.1248,
		2.2576,
		2.3904,
		2.5232,
		2.656,
		2.822,
		2.988,
		3.154,
	}
	// skill: skillDot = [0]
	skillDot = []float64{
		0.32,
		0.344,
		0.368,
		0.4,
		0.424,
		0.448,
		0.48,
		0.512,
		0.544,
		0.576,
		0.608,
		0.64,
		0.68,
		0.72,
		0.76,
	}
	// burst: dmgBonus = [9]
	dmgBonus = []float64{
		0.42,
		0.44,
		0.46,
		0.48,
		0.5,
		0.52,
		0.54,
		0.56,
		0.58,
		0.6,
		0.6,
		0.6,
		0.6,
		0.6,
		0.6,
	}
	// burst: explosion = [1]
	explosion = []float64{
		4.424,
		4.7558,
		5.0876,
		5.53,
		5.8618,
		6.1936,
		6.636,
		7.0784,
		7.5208,
		7.9632,
		8.4056,
		8.848,
		9.401,
		9.954,
		10.507,
	}
	// burst: omenDuration = [3]
	omenDuration = []float64{
		4,
		4,
		4,
		4.5,
		4.5,
		4.5,
		5,
		5,
		5,
		5,
		5,
		5,
		5,
		5,
		5,
	}
)
