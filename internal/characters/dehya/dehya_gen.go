// Code generated by "pipeline"; DO NOT EDIT.
package dehya

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	5: {"collision"},
	6: {"collision"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Dehya, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][]float64{
		attack_1,
		attack_2,
		attack_3,
		attack_4,
	}
)

var (
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.621178,
		0.671739,
		0.7223,
		0.79453,
		0.845091,
		0.902875,
		0.982328,
		1.061781,
		1.141234,
		1.22791,
		1.314586,
		1.401262,
		1.487938,
		1.574614,
		1.66129,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.617102,
		0.667331,
		0.71756,
		0.789316,
		0.839545,
		0.89695,
		0.975882,
		1.054813,
		1.133745,
		1.219852,
		1.305959,
		1.392066,
		1.478174,
		1.564281,
		1.650388,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.766312,
		0.828686,
		0.89106,
		0.980166,
		1.04254,
		1.113825,
		1.211842,
		1.309858,
		1.407875,
		1.514802,
		1.621729,
		1.728656,
		1.835584,
		1.942511,
		2.049438,
	}
	// attack: attack_4 = [3]
	attack_4 = []float64{
		0.952914,
		1.030477,
		1.10804,
		1.218844,
		1.296407,
		1.38505,
		1.506934,
		1.628819,
		1.750703,
		1.883668,
		2.016633,
		2.149598,
		2.282562,
		2.415527,
		2.548492,
	}
	// attack: collision = [8]
	collision = []float64{
		0.745878,
		0.806589,
		0.8673,
		0.95403,
		1.014741,
		1.084125,
		1.179528,
		1.274931,
		1.370334,
		1.47441,
		1.578486,
		1.682562,
		1.786638,
		1.890714,
		1.99479,
	}
	// attack: highPlunge = [10]
	highPlunge = []float64{
		1.862889,
		2.01452,
		2.16615,
		2.382765,
		2.534396,
		2.707688,
		2.945964,
		3.184241,
		3.422517,
		3.682455,
		3.942393,
		4.202331,
		4.462269,
		4.722207,
		4.982145,
	}
	// attack: lowPlunge = [9]
	lowPlunge = []float64{
		1.49144,
		1.612836,
		1.734233,
		1.907656,
		2.029052,
		2.167791,
		2.358556,
		2.549322,
		2.740087,
		2.948195,
		3.156303,
		3.364411,
		3.572519,
		3.780627,
		3.988735,
	}
	// skill: skill = [0]
	skill = []float64{
		1.1288,
		1.21346,
		1.29812,
		1.411,
		1.49566,
		1.58032,
		1.6932,
		1.80608,
		1.91896,
		2.03184,
		2.14472,
		2.2576,
		2.3987,
		2.5398,
		2.6809,
	}
	// skill: skillDotAtk = [2]
	skillDotAtk = []float64{
		0.602,
		0.64715,
		0.6923,
		0.7525,
		0.79765,
		0.8428,
		0.903,
		0.9632,
		1.0234,
		1.0836,
		1.1438,
		1.204,
		1.27925,
		1.3545,
		1.42975,
	}
	// skill: skillDotHP = [3]
	skillDotHP = []float64{
		0.01032,
		0.011094,
		0.011868,
		0.0129,
		0.013674,
		0.014448,
		0.01548,
		0.016512,
		0.017544,
		0.018576,
		0.019608,
		0.02064,
		0.02193,
		0.02322,
		0.02451,
	}
	// skill: skillMitigation = [4]
	skillMitigation = []float64{
		0.32,
		0.34,
		0.36,
		0.38,
		0.4,
		0.42,
		0.44,
		0.46,
		0.48,
		0.5,
		0.52,
		0.54,
		0.56,
		0.56,
		0.56,
	}
	// skill: skillReposition = [1]
	skillReposition = []float64{
		1.328,
		1.4276,
		1.5272,
		1.66,
		1.7596,
		1.8592,
		1.992,
		2.1248,
		2.2576,
		2.3904,
		2.5232,
		2.656,
		2.822,
		2.988,
		3.154,
	}
	// burst: burstKickAtk = [2]
	burstKickAtk = []float64{
		1.393,
		1.497475,
		1.60195,
		1.74125,
		1.845725,
		1.9502,
		2.0895,
		2.2288,
		2.3681,
		2.5074,
		2.6467,
		2.786,
		2.960125,
		3.13425,
		3.308375,
	}
	// burst: burstKickHP = [3]
	burstKickHP = []float64{
		0.02388,
		0.025671,
		0.027462,
		0.02985,
		0.031641,
		0.033432,
		0.03582,
		0.038208,
		0.040596,
		0.042984,
		0.045372,
		0.04776,
		0.050745,
		0.05373,
		0.056715,
	}
	// burst: burstPunchAtk = [0]
	burstPunchAtk = []float64{
		0.987,
		1.061025,
		1.13505,
		1.23375,
		1.307775,
		1.3818,
		1.4805,
		1.5792,
		1.6779,
		1.7766,
		1.8753,
		1.974,
		2.097375,
		2.22075,
		2.344125,
	}
	// burst: burstPunchHP = [1]
	burstPunchHP = []float64{
		0.01692,
		0.018189,
		0.019458,
		0.02115,
		0.022419,
		0.023688,
		0.02538,
		0.027072,
		0.028764,
		0.030456,
		0.032148,
		0.03384,
		0.035955,
		0.03807,
		0.040185,
	}
)
