// Code generated by "pipeline"; DO NOT EDIT.
package kokomi

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	3: {"travel"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Kokomi, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][]float64{
		attack_1,
		attack_2,
		attack_3,
	}
)

var (
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.6837599873542786,
		0.7350419759750366,
		0.7863240242004395,
		0.8547000288963318,
		0.9059820175170898,
		0.9572640061378479,
		1.0256400108337402,
		1.0940159559249878,
		1.162392020225525,
		1.2307679653167725,
		1.2991440296173096,
		1.3675199747085571,
		1.4529900550842285,
		1.5384600162506104,
		1.6239299774169922,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.6153839826583862,
		0.6615380048751831,
		0.70769202709198,
		0.7692300081253052,
		0.8153839707374573,
		0.8615379929542542,
		0.9230759739875793,
		0.9846140146255493,
		1.046152949333191,
		1.1076910495758057,
		1.1692299842834473,
		1.2307679653167725,
		1.307690978050232,
		1.3846139907836914,
		1.4615370035171509,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.9430559873580933,
		1.0137850046157837,
		1.0845140218734741,
		1.178820013999939,
		1.2495490312576294,
		1.3202780485153198,
		1.4145840406417847,
		1.5088900327682495,
		1.6031949520111084,
		1.6975009441375732,
		1.7918059825897217,
		1.8861119747161865,
		2.0039939880371094,
		2.1218760013580322,
		2.239758014678955,
	}
	// attack: charge = [3]
	charge = []float64{
		1.483199954032898,
		1.59443998336792,
		1.705680012702942,
		1.8539999723434448,
		1.9652400016784668,
		2.076479911804199,
		2.2248001098632812,
		2.373120069503784,
		2.521440029144287,
		2.66975998878479,
		2.818079948425293,
		2.966399908065796,
		3.1517999172210693,
		3.3371999263763428,
		3.522599935531616,
	}
	// skill: skillDmg = [2]
	skillDmg = []float64{
		1.0919040441513062,
		1.1737970113754272,
		1.2556899785995483,
		1.3648799657821655,
		1.4467730522155762,
		1.5286660194396973,
		1.6378560066223145,
		1.7470459938049316,
		1.8562370538711548,
		1.965427041053772,
		2.074618101119995,
		2.1838080883026123,
		2.320296049118042,
		2.4567840099334717,
		2.5932719707489014,
	}
	// skill: skillHealFlat = [1]
	skillHealFlat = []float64{
		423.706298828125,
		466.08282470703125,
		511.99072265625,
		561.4299926757812,
		614.400634765625,
		670.9026489257812,
		730.9360961914062,
		794.5008544921875,
		861.5970458984375,
		932.2245483398438,
		1006.3834838867188,
		1084.07373046875,
		1165.29541015625,
		1250.0484619140625,
		1338.3328857421875,
	}
	// skill: skillHealPct = [0]
	skillHealPct = []float64{
		0.04399999976158142,
		0.04729999974370003,
		0.050599999725818634,
		0.054999999701976776,
		0.05829999968409538,
		0.06159999966621399,
		0.06599999964237213,
		0.07039999961853027,
		0.07479999959468842,
		0.07919999957084656,
		0.0835999995470047,
		0.08799999952316284,
		0.09350000321865082,
		0.0989999994635582,
		0.10450000315904617,
	}
	// burst: burstBonusCharge = [4]
	burstBonusCharge = []float64{
		0.06775999814271927,
		0.07284200191497803,
		0.07792399823665619,
		0.08470000326633453,
		0.0897819995880127,
		0.09486400336027145,
		0.1016400009393692,
		0.10841599851846695,
		0.1151920035481453,
		0.12196800112724304,
		0.1287440061569214,
		0.13551999628543854,
		0.14398999512195587,
		0.1524599939584732,
		0.16092999279499054,
	}
	// burst: burstBonusNormal = [3]
	burstBonusNormal = []float64{
		0.04839999973773956,
		0.05203000083565712,
		0.05565999820828438,
		0.060499999672174454,
		0.06413000077009201,
		0.06775999814271927,
		0.07259999960660934,
		0.07744000107049942,
		0.0822800025343895,
		0.08711999654769897,
		0.09195999801158905,
		0.09679999947547913,
		0.10284999758005142,
		0.10890000313520432,
		0.11495000123977661,
	}
	// burst: burstBonusSkill = [8]
	burstBonusSkill = []float64{
		0.07096300274133682,
		0.0762849971652031,
		0.08160799741744995,
		0.08870399743318558,
		0.09402599930763245,
		0.09934800118207932,
		0.10644499957561493,
		0.11354099959135056,
		0.12063699960708618,
		0.1277340054512024,
		0.13482999801635742,
		0.14192600548267365,
		0.15079699456691742,
		0.1596670001745224,
		0.16853800415992737,
	}
	// burst: burstDmg = [0]
	burstDmg = []float64{
		0.10416000336408615,
		0.11197199672460556,
		0.11978399753570557,
		0.13019999861717224,
		0.13801200687885284,
		0.14582400023937225,
		0.15624000132083893,
		0.1666560024023056,
		0.17707200348377228,
		0.18748800456523895,
		0.19790400564670563,
		0.2083200067281723,
		0.22134000062942505,
		0.2343599945306778,
		0.24738000333309174,
	}
	// burst: burstHealFlat = [2]
	burstHealFlat = []float64{
		77.0373764038086,
		84.74217987060547,
		93.08905792236328,
		102.0780029296875,
		111.7090072631836,
		121.98208618164062,
		132.89723205566406,
		144.45445251464844,
		156.6537322998047,
		169.4950714111328,
		182.97848510742188,
		197.10397338867188,
		211.87152099609375,
		227.2811279296875,
		243.3328094482422,
	}
	// burst: burstHealPct = [1]
	burstHealPct = []float64{
		0.008080000057816505,
		0.008685999549925327,
		0.009291999973356724,
		0.010099999606609344,
		0.010706000030040741,
		0.011312000453472137,
		0.012120000086724758,
		0.012927999719977379,
		0.013736000284552574,
		0.014543999917805195,
		0.015351999551057816,
		0.01616000011563301,
		0.017170000821352005,
		0.01817999966442585,
		0.019190000370144844,
	}
)
