// Code generated by "pipeline"; DO NOT EDIT.
package ningguang

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	1: {"noscreen"},
	2: {"travel", "jade", "screen"},
	3: {"travel"},
	4: {"travel"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Ningguang, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	// attack: attack = [0]
	attack = []float64{
		0.2800000011920929,
		0.3009999990463257,
		0.32199999690055847,
		0.3499999940395355,
		0.3709999918937683,
		0.3919999897480011,
		0.41999998688697815,
		0.4480000138282776,
		0.47600001096725464,
		0.5040000081062317,
		0.5331199765205383,
		0.5712000131607056,
		0.609279990196228,
		0.6473600268363953,
		0.6854400038719177,
	}
	// attack: charge = [1]
	charge = []float64{
		1.7408000230789185,
		1.871359944343567,
		2.001919984817505,
		2.1760001182556152,
		2.3065600395202637,
		2.437119960784912,
		2.6112000942230225,
		2.7852799892425537,
		2.959359884262085,
		3.1334400177001953,
		3.3144829273223877,
		3.551232099533081,
		3.7879810333251953,
		4.024730205535889,
		4.261477947235107,
	}
	// attack: jade = [2]
	jade = []float64{
		0.4959999918937683,
		0.5332000255584717,
		0.5703999996185303,
		0.6200000047683716,
		0.6571999788284302,
		0.6944000124931335,
		0.7440000176429749,
		0.7936000227928162,
		0.8432000279426575,
		0.892799973487854,
		0.944383978843689,
		1.0118399858474731,
		1.0792959928512573,
		1.1467519998550415,
		1.2142080068588257,
	}
	// skill: skill = [1]
	skill = []float64{
		2.303999900817871,
		2.476799964904785,
		2.649600028991699,
		2.880000114440918,
		3.052799940109253,
		3.225600004196167,
		3.4560000896453857,
		3.6863999366760254,
		3.916800022125244,
		4.147200107574463,
		4.377600193023682,
		4.607999801635742,
		4.895999908447266,
		5.184000015258789,
		5.4720001220703125,
	}
	// burst: burst = [0]
	burst = []float64{
		0.8695999979972839,
		0.9348199963569641,
		1.000040054321289,
		1.0870000123977661,
		1.1522200107574463,
		1.2174400091171265,
		1.3043999671936035,
		1.3913600444793701,
		1.4783200025558472,
		1.5652799606323242,
		1.6522400379180908,
		1.7391999959945679,
		1.8479000329971313,
		1.9565999507904053,
		2.0652999877929688,
	}
)
