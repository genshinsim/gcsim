// Code generated by "pipeline"; DO NOT EDIT.
package kaeya

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	5: {"collision"},
	6: {"collision"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Kaeya, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	auto = [][]float64{
		auto_1,
		auto_2,
		auto_3,
		auto_4,
		auto_5,
	}
)

var (
	// attack: auto_1 = [0]
	auto_1 = []float64{
		0.5375,
		0.58125,
		0.625,
		0.6875,
		0.73125,
		0.78125,
		0.85,
		0.91875,
		0.9875,
		1.0625,
		1.148438,
		1.2495,
		1.350562,
		1.451625,
		1.561875,
	}
	// attack: auto_2 = [1]
	auto_2 = []float64{
		0.51686,
		0.55893,
		0.601,
		0.6611,
		0.70317,
		0.75125,
		0.81736,
		0.88347,
		0.94958,
		1.0217,
		1.104337,
		1.201519,
		1.298701,
		1.395883,
		1.501899,
	}
	// attack: auto_3 = [2]
	auto_3 = []float64{
		0.65274,
		0.70587,
		0.759,
		0.8349,
		0.88803,
		0.94875,
		1.03224,
		1.11573,
		1.19922,
		1.2903,
		1.394662,
		1.517393,
		1.640123,
		1.762853,
		1.896741,
	}
	// attack: auto_4 = [3]
	auto_4 = []float64{
		0.70864,
		0.76632,
		0.824,
		0.9064,
		0.96408,
		1.03,
		1.12064,
		1.21128,
		1.30192,
		1.4008,
		1.5141,
		1.647341,
		1.780582,
		1.913822,
		2.059176,
	}
	// attack: auto_5 = [4]
	auto_5 = []float64{
		0.88236,
		0.95418,
		1.026,
		1.1286,
		1.20042,
		1.2825,
		1.39536,
		1.50822,
		1.62108,
		1.7442,
		1.885275,
		2.051179,
		2.217083,
		2.382988,
		2.563974,
	}
	// attack: charge = [5 6]
	charge = [][]float64{
		{
			0.5504,
			0.5952,
			0.64,
			0.704,
			0.7488,
			0.8,
			0.8704,
			0.9408,
			1.0112,
			1.088,
			1.176,
			1.279488,
			1.382976,
			1.486464,
			1.59936,
		},
		{
			0.731,
			0.7905,
			0.85,
			0.935,
			0.9945,
			1.0625,
			1.156,
			1.2495,
			1.343,
			1.445,
			1.561875,
			1.69932,
			1.836765,
			1.97421,
			2.12415,
		},
	}
	// attack: collision = [8]
	collision = []float64{
		0.639324,
		0.691362,
		0.7434,
		0.81774,
		0.869778,
		0.92925,
		1.011024,
		1.092798,
		1.174572,
		1.26378,
		1.352988,
		1.442196,
		1.531404,
		1.620612,
		1.70982,
	}
	// attack: highPlunge = [10]
	highPlunge = []float64{
		1.596762,
		1.726731,
		1.8567,
		2.04237,
		2.172339,
		2.320875,
		2.525112,
		2.729349,
		2.933586,
		3.15639,
		3.379194,
		3.601998,
		3.824802,
		4.047606,
		4.27041,
	}
	// attack: lowPlunge = [9]
	lowPlunge = []float64{
		1.278377,
		1.382431,
		1.486485,
		1.635134,
		1.739187,
		1.858106,
		2.02162,
		2.185133,
		2.348646,
		2.527025,
		2.705403,
		2.883781,
		3.062159,
		3.240537,
		3.418915,
	}
	// skill: skill = [0]
	skill = []float64{
		1.912,
		2.0554,
		2.1988,
		2.39,
		2.5334,
		2.6768,
		2.868,
		3.0592,
		3.2504,
		3.4416,
		3.6328,
		3.824,
		4.063,
		4.302,
		4.541,
	}
	// burst: burst = [0]
	burst = []float64{
		0.776,
		0.8342,
		0.8924,
		0.97,
		1.0282,
		1.0864,
		1.164,
		1.2416,
		1.3192,
		1.3968,
		1.4744,
		1.552,
		1.649,
		1.746,
		1.843,
	}
)
