// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: protos/model/data.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AvatarDataMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]*AvatarData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"data,omitempty"`
}

func (x *AvatarDataMap) Reset() {
	*x = AvatarDataMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarDataMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarDataMap) ProtoMessage() {}

func (x *AvatarDataMap) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarDataMap.ProtoReflect.Descriptor instead.
func (*AvatarDataMap) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{0}
}

func (x *AvatarDataMap) GetData() map[string]*AvatarData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AvatarData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" bson:"id,omitempty"`
	SubId           int32             `protobuf:"varint,2,opt,name=sub_id,proto3" json:"sub_id,omitempty" bson:"sub_id,omitempty"`
	Key             string            `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty" bson:"key,omitempty"`
	Rarity          QualityType       `protobuf:"varint,4,opt,name=rarity,proto3,enum=model.QualityType" json:"rarity,omitempty" bson:"rarity,omitempty"`
	Body            BodyType          `protobuf:"varint,5,opt,name=body,proto3,enum=model.BodyType" json:"body,omitempty" bson:"body,omitempty"`
	Region          ZoneType          `protobuf:"varint,6,opt,name=region,proto3,enum=model.ZoneType" json:"region,omitempty" bson:"region,omitempty"`
	Element         Element           `protobuf:"varint,7,opt,name=element,proto3,enum=model.Element" json:"element,omitempty" bson:"element,omitempty"`
	WeaponClass     WeaponClass       `protobuf:"varint,8,opt,name=weapon_class,proto3,enum=model.WeaponClass" json:"weapon_class,omitempty" bson:"weapon_class,omitempty"`
	IconName        string            `protobuf:"bytes,9,opt,name=icon_name,proto3" json:"icon_name,omitempty" bson:"icon_name,omitempty"`
	Stats           *AvatarStatsData  `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty" bson:"stats,omitempty"`
	SkillDetails    *AvatarSkillsData `protobuf:"bytes,11,opt,name=skill_details,proto3" json:"skill_details,omitempty" bson:"skill_details,omitempty"`
	NameTextHashMap int64             `protobuf:"varint,12,opt,name=name_text_hash_map,json=name_text_hash_map ,proto3" json:"name_text_hash_map,omitempty" bson:"name_text_hash_map,omitempty"`
}

func (x *AvatarData) Reset() {
	*x = AvatarData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarData) ProtoMessage() {}

func (x *AvatarData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarData.ProtoReflect.Descriptor instead.
func (*AvatarData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{1}
}

func (x *AvatarData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AvatarData) GetSubId() int32 {
	if x != nil {
		return x.SubId
	}
	return 0
}

func (x *AvatarData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AvatarData) GetRarity() QualityType {
	if x != nil {
		return x.Rarity
	}
	return QualityType_INVALID_QUALITY_TYPE
}

func (x *AvatarData) GetBody() BodyType {
	if x != nil {
		return x.Body
	}
	return BodyType_INVALID_BODY_TYPE
}

func (x *AvatarData) GetRegion() ZoneType {
	if x != nil {
		return x.Region
	}
	return ZoneType_INVALID_ZONE_TYPE
}

func (x *AvatarData) GetElement() Element {
	if x != nil {
		return x.Element
	}
	return Element_INVALID_ELEMENT
}

func (x *AvatarData) GetWeaponClass() WeaponClass {
	if x != nil {
		return x.WeaponClass
	}
	return WeaponClass_INVALID_WEAPON_CLASS
}

func (x *AvatarData) GetIconName() string {
	if x != nil {
		return x.IconName
	}
	return ""
}

func (x *AvatarData) GetStats() *AvatarStatsData {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *AvatarData) GetSkillDetails() *AvatarSkillsData {
	if x != nil {
		return x.SkillDetails
	}
	return nil
}

func (x *AvatarData) GetNameTextHashMap() int64 {
	if x != nil {
		return x.NameTextHashMap
	}
	return 0
}

type AvatarStatsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: base stat should be refactor to just an array of stats
	// there is no requirement that base stat can only be 3 stats; in fact
	// ER/cr/cd can be considered as base
	BaseHp    float64          `protobuf:"fixed64,1,opt,name=base_hp,proto3" json:"base_hp,omitempty" bson:"base_hp,omitempty"`
	BaseAtk   float64          `protobuf:"fixed64,2,opt,name=base_atk,proto3" json:"base_atk,omitempty" bson:"base_atk,omitempty"`
	BaseDef   float64          `protobuf:"fixed64,3,opt,name=base_def,proto3" json:"base_def,omitempty" bson:"base_def,omitempty"`
	HpCurve   AvatarCurveType  `protobuf:"varint,4,opt,name=hp_curve,proto3,enum=model.AvatarCurveType" json:"hp_curve,omitempty" bson:"hp_curve,omitempty"`
	AtkCurve  AvatarCurveType  `protobuf:"varint,5,opt,name=atk_curve,proto3,enum=model.AvatarCurveType" json:"atk_curve,omitempty" bson:"atk_curve,omitempty"`
	DefCruve  AvatarCurveType  `protobuf:"varint,6,opt,name=def_cruve,proto3,enum=model.AvatarCurveType" json:"def_cruve,omitempty" bson:"def_cruve,omitempty"`
	PromoData []*PromotionData `protobuf:"bytes,7,rep,name=promo_data,proto3" json:"promo_data,omitempty" bson:"promo_data,omitempty"`
}

func (x *AvatarStatsData) Reset() {
	*x = AvatarStatsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarStatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarStatsData) ProtoMessage() {}

func (x *AvatarStatsData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarStatsData.ProtoReflect.Descriptor instead.
func (*AvatarStatsData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{2}
}

func (x *AvatarStatsData) GetBaseHp() float64 {
	if x != nil {
		return x.BaseHp
	}
	return 0
}

func (x *AvatarStatsData) GetBaseAtk() float64 {
	if x != nil {
		return x.BaseAtk
	}
	return 0
}

func (x *AvatarStatsData) GetBaseDef() float64 {
	if x != nil {
		return x.BaseDef
	}
	return 0
}

func (x *AvatarStatsData) GetHpCurve() AvatarCurveType {
	if x != nil {
		return x.HpCurve
	}
	return AvatarCurveType_INVALID_AVATAR_CURVE
}

func (x *AvatarStatsData) GetAtkCurve() AvatarCurveType {
	if x != nil {
		return x.AtkCurve
	}
	return AvatarCurveType_INVALID_AVATAR_CURVE
}

func (x *AvatarStatsData) GetDefCruve() AvatarCurveType {
	if x != nil {
		return x.DefCruve
	}
	return AvatarCurveType_INVALID_AVATAR_CURVE
}

func (x *AvatarStatsData) GetPromoData() []*PromotionData {
	if x != nil {
		return x.PromoData
	}
	return nil
}

type AvatarSkillsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skill           int32                        `protobuf:"varint,1,opt,name=skill,proto3" json:"skill,omitempty" bson:"skill,omitempty"`
	Burst           int32                        `protobuf:"varint,2,opt,name=burst,proto3" json:"burst,omitempty" bson:"burst,omitempty"`
	Attack          int32                        `protobuf:"varint,3,opt,name=attack,proto3" json:"attack,omitempty" bson:"attack,omitempty"`
	BurstEnergyCost float64                      `protobuf:"fixed64,4,opt,name=burst_energy_cost,proto3" json:"burst_energy_cost,omitempty" bson:"burst_energy_cost,omitempty"`
	AttackScaling   []*AvatarSkillExcelIndexData `protobuf:"bytes,5,rep,name=attack_scaling,proto3" json:"attack_scaling,omitempty" bson:"attack_scaling,omitempty"`
	SkillScaling    []*AvatarSkillExcelIndexData `protobuf:"bytes,6,rep,name=skill_scaling,proto3" json:"skill_scaling,omitempty" bson:"skill_scaling,omitempty"`
	BurstScaling    []*AvatarSkillExcelIndexData `protobuf:"bytes,7,rep,name=burst_scaling,proto3" json:"burst_scaling,omitempty" bson:"burst_scaling,omitempty"`
}

func (x *AvatarSkillsData) Reset() {
	*x = AvatarSkillsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillsData) ProtoMessage() {}

func (x *AvatarSkillsData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillsData.ProtoReflect.Descriptor instead.
func (*AvatarSkillsData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{3}
}

func (x *AvatarSkillsData) GetSkill() int32 {
	if x != nil {
		return x.Skill
	}
	return 0
}

func (x *AvatarSkillsData) GetBurst() int32 {
	if x != nil {
		return x.Burst
	}
	return 0
}

func (x *AvatarSkillsData) GetAttack() int32 {
	if x != nil {
		return x.Attack
	}
	return 0
}

func (x *AvatarSkillsData) GetBurstEnergyCost() float64 {
	if x != nil {
		return x.BurstEnergyCost
	}
	return 0
}

func (x *AvatarSkillsData) GetAttackScaling() []*AvatarSkillExcelIndexData {
	if x != nil {
		return x.AttackScaling
	}
	return nil
}

func (x *AvatarSkillsData) GetSkillScaling() []*AvatarSkillExcelIndexData {
	if x != nil {
		return x.SkillScaling
	}
	return nil
}

func (x *AvatarSkillsData) GetBurstScaling() []*AvatarSkillExcelIndexData {
	if x != nil {
		return x.BurstScaling
	}
	return nil
}

type AvatarSkillExcelIndexData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   int32                        `protobuf:"varint,1,opt,name=group_id,proto3" json:"group_id,omitempty" bson:"group_id,omitempty"`
	Index     int32                        `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty" bson:"index,omitempty"` // position in the param list
	LevelData []*AvatarSkillExcelLevelData `protobuf:"bytes,3,rep,name=level_data,proto3" json:"level_data,omitempty" bson:"level_data,omitempty"`
}

func (x *AvatarSkillExcelIndexData) Reset() {
	*x = AvatarSkillExcelIndexData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillExcelIndexData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillExcelIndexData) ProtoMessage() {}

func (x *AvatarSkillExcelIndexData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillExcelIndexData.ProtoReflect.Descriptor instead.
func (*AvatarSkillExcelIndexData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{4}
}

func (x *AvatarSkillExcelIndexData) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AvatarSkillExcelIndexData) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *AvatarSkillExcelIndexData) GetLevelData() []*AvatarSkillExcelLevelData {
	if x != nil {
		return x.LevelData
	}
	return nil
}

type AvatarSkillExcelLevelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32   `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty" bson:"level,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty" bson:"value,omitempty"`
}

func (x *AvatarSkillExcelLevelData) Reset() {
	*x = AvatarSkillExcelLevelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarSkillExcelLevelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarSkillExcelLevelData) ProtoMessage() {}

func (x *AvatarSkillExcelLevelData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarSkillExcelLevelData.ProtoReflect.Descriptor instead.
func (*AvatarSkillExcelLevelData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{5}
}

func (x *AvatarSkillExcelLevelData) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AvatarSkillExcelLevelData) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type WeaponDataMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]*WeaponData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"data,omitempty"`
}

func (x *WeaponDataMap) Reset() {
	*x = WeaponDataMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponDataMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponDataMap) ProtoMessage() {}

func (x *WeaponDataMap) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponDataMap.ProtoReflect.Descriptor instead.
func (*WeaponDataMap) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{6}
}

func (x *WeaponDataMap) GetData() map[string]*WeaponData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WeaponData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" bson:"id,omitempty"`
	Key             string           `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty" bson:"key,omitempty"`
	Rarity          int32            `protobuf:"varint,3,opt,name=rarity,proto3" json:"rarity,omitempty" bson:"rarity,omitempty"` //for whatever reason weapon rarity is a number
	WeaponClass     WeaponClass      `protobuf:"varint,4,opt,name=weapon_class,proto3,enum=model.WeaponClass" json:"weapon_class,omitempty" bson:"weapon_class,omitempty"`
	ImageName       string           `protobuf:"bytes,5,opt,name=image_name,proto3" json:"image_name,omitempty" bson:"image_name,omitempty"`
	BaseStats       *WeaponStatsData `protobuf:"bytes,6,opt,name=base_stats,proto3" json:"base_stats,omitempty" bson:"base_stats,omitempty"`
	NameTextHashMap int64            `protobuf:"varint,7,opt,name=name_text_hash_map,json=name_text_hash_map ,proto3" json:"name_text_hash_map,omitempty" bson:"name_text_hash_map,omitempty"`
}

func (x *WeaponData) Reset() {
	*x = WeaponData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponData) ProtoMessage() {}

func (x *WeaponData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponData.ProtoReflect.Descriptor instead.
func (*WeaponData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{7}
}

func (x *WeaponData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WeaponData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WeaponData) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *WeaponData) GetWeaponClass() WeaponClass {
	if x != nil {
		return x.WeaponClass
	}
	return WeaponClass_INVALID_WEAPON_CLASS
}

func (x *WeaponData) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *WeaponData) GetBaseStats() *WeaponStatsData {
	if x != nil {
		return x.BaseStats
	}
	return nil
}

func (x *WeaponData) GetNameTextHashMap() int64 {
	if x != nil {
		return x.NameTextHashMap
	}
	return 0
}

type WeaponStatsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseProps []*WeaponProp    `protobuf:"bytes,1,rep,name=base_props,proto3" json:"base_props,omitempty" bson:"base_props,omitempty"`
	PromoData []*PromotionData `protobuf:"bytes,2,rep,name=promo_data,proto3" json:"promo_data,omitempty" bson:"promo_data,omitempty"`
}

func (x *WeaponStatsData) Reset() {
	*x = WeaponStatsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponStatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponStatsData) ProtoMessage() {}

func (x *WeaponStatsData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponStatsData.ProtoReflect.Descriptor instead.
func (*WeaponStatsData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{8}
}

func (x *WeaponStatsData) GetBaseProps() []*WeaponProp {
	if x != nil {
		return x.BaseProps
	}
	return nil
}

func (x *WeaponStatsData) GetPromoData() []*PromotionData {
	if x != nil {
		return x.PromoData
	}
	return nil
}

type WeaponProp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropType     StatType        `protobuf:"varint,1,opt,name=prop_type,proto3,enum=model.StatType" json:"prop_type,omitempty" bson:"prop_type,omitempty"`
	InitialValue float64         `protobuf:"fixed64,2,opt,name=initial_value,proto3" json:"initial_value,omitempty" bson:"initial_value,omitempty"`
	Curve        WeaponCurveType `protobuf:"varint,3,opt,name=curve,proto3,enum=model.WeaponCurveType" json:"curve,omitempty" bson:"curve,omitempty"`
}

func (x *WeaponProp) Reset() {
	*x = WeaponProp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponProp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponProp) ProtoMessage() {}

func (x *WeaponProp) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponProp.ProtoReflect.Descriptor instead.
func (*WeaponProp) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{9}
}

func (x *WeaponProp) GetPropType() StatType {
	if x != nil {
		return x.PropType
	}
	return StatType_INVALID_STAT_TYPE
}

func (x *WeaponProp) GetInitialValue() float64 {
	if x != nil {
		return x.InitialValue
	}
	return 0
}

func (x *WeaponProp) GetCurve() WeaponCurveType {
	if x != nil {
		return x.Curve
	}
	return WeaponCurveType_INVALID_WEAPON_CURVE
}

type ArtifactDataMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]*ArtifactData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"data,omitempty"`
}

func (x *ArtifactDataMap) Reset() {
	*x = ArtifactDataMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactDataMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactDataMap) ProtoMessage() {}

func (x *ArtifactDataMap) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactDataMap.ProtoReflect.Descriptor instead.
func (*ArtifactDataMap) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{10}
}

func (x *ArtifactDataMap) GetData() map[string]*ArtifactData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArtifactData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetId     int64  `protobuf:"varint,1,opt,name=set_id,json=id,proto3" json:"set_id,omitempty" bson:"id,omitempty"`
	TextMapId int64  `protobuf:"varint,2,opt,name=text_map_id,proto3" json:"text_map_id,omitempty" bson:"text_map_id,omitempty"`
	Key       string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty" bson:"key,omitempty"`
}

func (x *ArtifactData) Reset() {
	*x = ArtifactData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactData) ProtoMessage() {}

func (x *ArtifactData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactData.ProtoReflect.Descriptor instead.
func (*ArtifactData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{11}
}

func (x *ArtifactData) GetSetId() int64 {
	if x != nil {
		return x.SetId
	}
	return 0
}

func (x *ArtifactData) GetTextMapId() int64 {
	if x != nil {
		return x.TextMapId
	}
	return 0
}

func (x *ArtifactData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type PromotionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxLevel int32               `protobuf:"varint,1,opt,name=max_level,proto3" json:"max_level,omitempty" bson:"max_level,omitempty"`
	AddProps []*PromotionAddProp `protobuf:"bytes,2,rep,name=add_props,proto3" json:"add_props,omitempty" bson:"add_props,omitempty"`
}

func (x *PromotionData) Reset() {
	*x = PromotionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionData) ProtoMessage() {}

func (x *PromotionData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionData.ProtoReflect.Descriptor instead.
func (*PromotionData) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{12}
}

func (x *PromotionData) GetMaxLevel() int32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *PromotionData) GetAddProps() []*PromotionAddProp {
	if x != nil {
		return x.AddProps
	}
	return nil
}

type PromotionAddProp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropType StatType `protobuf:"varint,1,opt,name=prop_type,proto3,enum=model.StatType" json:"prop_type,omitempty" bson:"prop_type,omitempty"`
	Value    float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty" bson:"value,omitempty"`
}

func (x *PromotionAddProp) Reset() {
	*x = PromotionAddProp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionAddProp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionAddProp) ProtoMessage() {}

func (x *PromotionAddProp) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionAddProp.ProtoReflect.Descriptor instead.
func (*PromotionAddProp) Descriptor() ([]byte, []int) {
	return file_protos_model_data_proto_rawDescGZIP(), []int{13}
}

func (x *PromotionAddProp) GetPropType() StatType {
	if x != nil {
		return x.PropType
	}
	return StatType_INVALID_STAT_TYPE
}

func (x *PromotionAddProp) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_protos_model_data_proto protoreflect.FileDescriptor

var file_protos_model_data_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x4a, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xde, 0x03, 0x0a,
	0x0a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x75, 0x62,
	0x5f, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x23, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x5a,
	0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x77, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x0c, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x3d, 0x0a,
	0x0d, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x12,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6d, 0x61, 0x70, 0x20, 0x22, 0xb9, 0x02,
	0x0a, 0x0f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x68, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x68, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x61, 0x74, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x61, 0x74, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x64, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x64, 0x65, 0x66, 0x12, 0x32, 0x0a, 0x08, 0x68, 0x70, 0x5f, 0x63, 0x75, 0x72, 0x76, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x43, 0x75, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x68,
	0x70, 0x5f, 0x63, 0x75, 0x72, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x74, 0x6b, 0x5f, 0x63,
	0x75, 0x72, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x75, 0x72, 0x76, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x61, 0x74, 0x6b, 0x5f, 0x63, 0x75, 0x72, 0x76, 0x65, 0x12, 0x34, 0x0a,
	0x09, 0x64, 0x65, 0x66, 0x5f, 0x63, 0x72, 0x75, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43,
	0x75, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x64, 0x65, 0x66, 0x5f, 0x63, 0x72,
	0x75, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xde, 0x02, 0x0a, 0x10, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x72, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x72, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x72, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x62,
	0x75, 0x72, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x63, 0x65,
	0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0d, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0d, 0x62, 0x75, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x63,
	0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x62, 0x75, 0x72,
	0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x40, 0x0a, 0x0a, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x19,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x63, 0x65, 0x6c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x4a, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x87, 0x02, 0x0a, 0x0a, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x36, 0x0a, 0x0c, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57,
	0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x2f, 0x0a, 0x12, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6d, 0x61, 0x70,
	0x20, 0x22, 0x7a, 0x0a, 0x0f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01,
	0x0a, 0x0a, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x2d, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43,
	0x75, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x22,
	0x95, 0x01, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x61, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x4c, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x56, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x64, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x35,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x09, 0x61, 0x64, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x57, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x27,
	0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x6e,
	0x73, 0x68, 0x69, 0x6e, 0x73, 0x69, 0x6d, 0x2f, 0x67, 0x63, 0x73, 0x69, 0x6d, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_model_data_proto_rawDescOnce sync.Once
	file_protos_model_data_proto_rawDescData = file_protos_model_data_proto_rawDesc
)

func file_protos_model_data_proto_rawDescGZIP() []byte {
	file_protos_model_data_proto_rawDescOnce.Do(func() {
		file_protos_model_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_model_data_proto_rawDescData)
	})
	return file_protos_model_data_proto_rawDescData
}

var file_protos_model_data_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_protos_model_data_proto_goTypes = []interface{}{
	(*AvatarDataMap)(nil),             // 0: model.AvatarDataMap
	(*AvatarData)(nil),                // 1: model.AvatarData
	(*AvatarStatsData)(nil),           // 2: model.AvatarStatsData
	(*AvatarSkillsData)(nil),          // 3: model.AvatarSkillsData
	(*AvatarSkillExcelIndexData)(nil), // 4: model.AvatarSkillExcelIndexData
	(*AvatarSkillExcelLevelData)(nil), // 5: model.AvatarSkillExcelLevelData
	(*WeaponDataMap)(nil),             // 6: model.WeaponDataMap
	(*WeaponData)(nil),                // 7: model.WeaponData
	(*WeaponStatsData)(nil),           // 8: model.WeaponStatsData
	(*WeaponProp)(nil),                // 9: model.WeaponProp
	(*ArtifactDataMap)(nil),           // 10: model.ArtifactDataMap
	(*ArtifactData)(nil),              // 11: model.ArtifactData
	(*PromotionData)(nil),             // 12: model.PromotionData
	(*PromotionAddProp)(nil),          // 13: model.PromotionAddProp
	nil,                               // 14: model.AvatarDataMap.DataEntry
	nil,                               // 15: model.WeaponDataMap.DataEntry
	nil,                               // 16: model.ArtifactDataMap.DataEntry
	(QualityType)(0),                  // 17: model.QualityType
	(BodyType)(0),                     // 18: model.BodyType
	(ZoneType)(0),                     // 19: model.ZoneType
	(Element)(0),                      // 20: model.Element
	(WeaponClass)(0),                  // 21: model.WeaponClass
	(AvatarCurveType)(0),              // 22: model.AvatarCurveType
	(StatType)(0),                     // 23: model.StatType
	(WeaponCurveType)(0),              // 24: model.WeaponCurveType
}
var file_protos_model_data_proto_depIdxs = []int32{
	14, // 0: model.AvatarDataMap.data:type_name -> model.AvatarDataMap.DataEntry
	17, // 1: model.AvatarData.rarity:type_name -> model.QualityType
	18, // 2: model.AvatarData.body:type_name -> model.BodyType
	19, // 3: model.AvatarData.region:type_name -> model.ZoneType
	20, // 4: model.AvatarData.element:type_name -> model.Element
	21, // 5: model.AvatarData.weapon_class:type_name -> model.WeaponClass
	2,  // 6: model.AvatarData.stats:type_name -> model.AvatarStatsData
	3,  // 7: model.AvatarData.skill_details:type_name -> model.AvatarSkillsData
	22, // 8: model.AvatarStatsData.hp_curve:type_name -> model.AvatarCurveType
	22, // 9: model.AvatarStatsData.atk_curve:type_name -> model.AvatarCurveType
	22, // 10: model.AvatarStatsData.def_cruve:type_name -> model.AvatarCurveType
	12, // 11: model.AvatarStatsData.promo_data:type_name -> model.PromotionData
	4,  // 12: model.AvatarSkillsData.attack_scaling:type_name -> model.AvatarSkillExcelIndexData
	4,  // 13: model.AvatarSkillsData.skill_scaling:type_name -> model.AvatarSkillExcelIndexData
	4,  // 14: model.AvatarSkillsData.burst_scaling:type_name -> model.AvatarSkillExcelIndexData
	5,  // 15: model.AvatarSkillExcelIndexData.level_data:type_name -> model.AvatarSkillExcelLevelData
	15, // 16: model.WeaponDataMap.data:type_name -> model.WeaponDataMap.DataEntry
	21, // 17: model.WeaponData.weapon_class:type_name -> model.WeaponClass
	8,  // 18: model.WeaponData.base_stats:type_name -> model.WeaponStatsData
	9,  // 19: model.WeaponStatsData.base_props:type_name -> model.WeaponProp
	12, // 20: model.WeaponStatsData.promo_data:type_name -> model.PromotionData
	23, // 21: model.WeaponProp.prop_type:type_name -> model.StatType
	24, // 22: model.WeaponProp.curve:type_name -> model.WeaponCurveType
	16, // 23: model.ArtifactDataMap.data:type_name -> model.ArtifactDataMap.DataEntry
	13, // 24: model.PromotionData.add_props:type_name -> model.PromotionAddProp
	23, // 25: model.PromotionAddProp.prop_type:type_name -> model.StatType
	1,  // 26: model.AvatarDataMap.DataEntry.value:type_name -> model.AvatarData
	7,  // 27: model.WeaponDataMap.DataEntry.value:type_name -> model.WeaponData
	11, // 28: model.ArtifactDataMap.DataEntry.value:type_name -> model.ArtifactData
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_protos_model_data_proto_init() }
func file_protos_model_data_proto_init() {
	if File_protos_model_data_proto != nil {
		return
	}
	file_protos_model_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_model_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarDataMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarStatsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillExcelIndexData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarSkillExcelLevelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponDataMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponStatsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponProp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactDataMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionAddProp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_model_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_model_data_proto_goTypes,
		DependencyIndexes: file_protos_model_data_proto_depIdxs,
		MessageInfos:      file_protos_model_data_proto_msgTypes,
	}.Build()
	File_protos_model_data_proto = out.File
	file_protos_model_data_proto_rawDesc = nil
	file_protos_model_data_proto_goTypes = nil
	file_protos_model_data_proto_depIdxs = nil
}
