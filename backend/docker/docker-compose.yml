version: "3.8"

services:
  # tunnel for the backend service
  # cloudflared:
  #   container_name: cloudflared
  #   image: cloudflare/cloudflared:latest
  #   command: "tunnel --no-autoupdate run --token $CF_TUNNEL_TOKEN"
  #   volumes:
  #     - ./backend/cloudflared:/etc/cloudflared
  #   environment:
  #     - CF_TUNNEL_TOKEN
  #   depends_on:
  #     - jadechamber
  #   restart: unless-stopped
  mqtt:
    container_name: mqtt
    build:
      context: .
      dockerfile: ./mqtt.Dockerfile 
    environment:
      - MOSQUITTO_USERNAME=mosquitto
      - MOSQUITTO_PASSWORD=password
    container_name: mqtt
    restart: unless-stopped
    volumes:
      - ./mosquitto/config:/mosquitto/config:ro
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
  # generating embed for discord etc
  preview:
    container_name: preview
    build:
      context: .
      dockerfile: ./preview.Dockerfile
    volumes:
      - ~/assets/assets:/assets
    environment:
      - ASSETS_DATA_PATH=/assets
    ports:
      - 9011:3000
    restart: unless-stopped
  share:
    container_name: share
    build:
      context: .
      dockerfile: ./share.Dockerfile
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://mongo:27017
      - MONGODB_DATABASE=gcsim-database
      - MONGODB_COLLECTION=shares
      - MONGODB_USERNAME=root
      - MONOGDB_PASSWORD=root-password
  db:
    container_name: db
    build:
      context: .
      dockerfile: ./db.Dockerfile
    environment:
      - MONGODB_URL=mongodb://mongo:27017
      - MONGODB_DATABASE=gcsim-database
      - MONGODB_COLLECTION=data
      - MONGODB_QUERY_VIEW=gcsimvaliddb
      - MONGODB_SUB_VIEW=gcsimsubs
      - MONGODB_USERNAME=root
      - MONOGDB_PASSWORD=root-password
      - SHARE_STORE_URL=share:3000
      # mqtt env for notification service
      - MQTT_URL=mqtt:1883
      - MQTT_USERNAME=mosquitto
      - MQTT_PASSWORD=password
    # ports are exposed in order to access the grpc directly via localhost during dev
    ports:
      - 8082:3000
    restart: unless-stopped
    depends_on:
      - mongo
  jadechamber:
    container_name: jadechamber
    build:
      context: .
      dockerfile: ./jadechamber.Dockerfile
    volumes:
      - ~/data:/data
      - ./keys.json:/keys.json
    environment:
      - USER_DATA_PATH=/data/user
      - DISCORD_ID
      - DISCORD_SECRET
      - REDIRECT_URL
      - SHARE_STORE_URL=share:3000
      - DB_STORE_URL=db:3000
      - PREVIEW_STORE_URL=preview:3000
      - SHARE_KEY_FILE=/keys.json
      # mqtt env for notification service
      - MQTT_URL=mqtt:1883
      - MQTT_USERNAME=mosquitto
      - MQTT_PASSWORD=password
    restart: unless-stopped
    ports:
      - 9010:3000
  # discord bot
  managerchan:
    container_name: managerchan
    build:
      context: .
      dockerfile: ./managerchan.Dockerfile
    volumes:
      - ./tagger_mapping.json:/mapping.json
    environment:
      - DISCORD_CHAN_TO_TAG_MAPPING_FILE=/mapping.json
      - SHARE_STORE_URL=share:3000
      - DB_STORE_URL=db:3000
      - DISCORD_BOT_TOKEN
  notification:
    container_name: notification
    build:
      context: .
      dockerfile: ./notification.Dockerfile
    environment:
      - MQTT_URL=mqtt:1883
      - MQTT_USERNAME=mosquitto
      - MQTT_PASSWORD=password
      - NOTIFY_INFO_ID
      - NOTIFY_INFO_TOKEN
      - NOTIFY_CRITICAL_ID
      - NOTIFY_CRITICAL_TOKEN
    depends_on:
      - mqtt
  # mongo server for db
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root-password
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ~/data/mongo:/data/db:rw
  # dev stuff
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    links:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root-password
      ME_CONFIG_MONGODB_URL: mongodb://root:root-password@mongo:27017/
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080