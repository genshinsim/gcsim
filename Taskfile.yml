version: '3'

tasks:
  build:
    cmds:
      - task: protos
      - task: embed
      - task: pipeline
  protos:
    cmds:
      - protoc --experimental_allow_proto3_optional --go_out=module=github.com/genshinsim/gcsim:. --go-grpc_out=module=github.com/genshinsim/gcsim:. protos/**/*.proto
      - go run scripts/bsontags/main.go -dir ./pkg/model -verbose
      - go run scripts/bsontags/main.go -dir ./backend/pkg/services/db -verbose
      - go run scripts/bsontags/main.go -dir ./backend/pkg/services/share -verbose
      - task: protos-to-ts
  protos-to-ts:
    dir: ./ui
    cmds:
      - yarn gen:ts
  embed:
    cmds:
      - sh -c "scripts/build_preview.sh"
  pipeline:
    cmds:
      - go run pipeline/cmd/generate/main.go
  wasm:
    dir: cmd/wasm
    cmds:
      - go build -o '{{.OUT | default "main.wasm"}}' -ldflags="-X 'main.shareKey=${{if eq OS "windows"}}env:{{end}}GCSIM_SHARE_KEY'"
      - echo "compiled wasm successfully!"
    env:
      GOOS: js 
      GOARCH: wasm
  dev-server-mode:
    desc: watches for change and launches server mode
    watch: true
    sources:
      - '**/*.go'
    vars:
      WIN_CMD: Get-CimInstance -ClassName Win32_PRocess -Filter "CommandLine LIKE '%GCSIM_SERVER%'" | ForEach-Object -Process {taskkill /F /PID $_.ProcessId}
    cmds:
      - cmd: powershell {{shellQuote .WIN_CMD}}
        platforms: [windows]
        ignore_error: true
      - cmd: pkill -f GCSIM_SERVER=1
        platforms: [linux, darwin]
        ignore_error: true
      - go run cmd/server/main.go GCSIM_SERVER=1

